- name: Install prerequisite packages
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
    name:
    - apache2
    - libapache2-mod-auth-mellon
    - mariadb-server
    - php-mysql
    - php-fpm
    - python3-pymysql
    - python3-lxml
    state: latest
  become: true

- name: Setup database
  include_tasks: setup-database.yaml

- name: Disable apache mpm_prefork
  community.general.apache2_module:
    name: mpm_prefork
    state: absent
    ignore_configcheck: true
  become: true

- name: Enable apache mpm_event
  community.general.apache2_module:
    name: '{{ item }}'
    state: present
  notify: apache restart
  become: true
  with_items:
  - mpm_event
  - proxy_fcgi
  - auth_mellon
  - rewrite
  - ssl

- name: Check if mellon files have been previously created
  ansible.builtin.stat:
    path: "/etc/apache2/mellon/https_{{ hostname }}.xml"
  register: mellon_files

- name: Create mellon folder in apache configuration
  ansible.builtin.file:
    dest: /etc/apache2/mellon
    state: directory
  become: true
  when: mellon_files.stat.exists == false

- name: Initialize mellon files
  ansible.builtin.shell:
    cmd: /usr/sbin/mellon_create_metadata https://{{ hostname }} "https://{{ hostname }}/mellon"
    chdir: /etc/apache2/mellon
  become: true
  when: mellon_files.stat.exists == false

- name: Check if e-mail entry needs to be added
  community.general.xml:
    path: "/etc/apache2/mellon/https_{{ hostname }}.xml"
    xpath: /om:EntityDescriptor/om:SPSSODescriptor/om:NameIDFormat
    namespaces:
      om: "urn:oasis:names:tc:SAML:2.0:metadata"
    count: yes
  register: mellon_mail

- name: Add e-mail entry to mellon xml
  community.general.xml:
    path: "/etc/apache2/mellon/https_{{ hostname }}.xml"
    xpath: /om:EntityDescriptor/om:SPSSODescriptor
    namespaces:
      om: "urn:oasis:names:tc:SAML:2.0:metadata"
    add_children:
    - NameIDFormat: 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress'
  become: true
  when: mellon_mail.count < 1

- name: Copy mellon.conf
  ansible.builtin.template:
    src: mellon.j2
    dest: /etc/apache2/conf-available/mellon.conf
  become: true

- name: Enable mellon.conf
  ansible.builtin.file:
    src: ../conf-available/mellon.conf
    dest: /etc/apache2/conf-enabled/mellon.conf
    state: link
  become: true
  notify: apache restart

- name: Enable php-fpm
  ansible.builtin.file:
    src: ../conf-available/php7.4-fpm.conf
    dest: /etc/apache2/conf-enabled/php7.4-fpm.conf
    state: link
  become: true
  notify: apache restart

- name: Install superlinks site config
  ansible.builtin.template:
    src: superlinks.j2
    dest: /etc/apache2/sites-available/superlinks.conf
  become: true

- name: Enable superlinks.conf
  ansible.builtin.file:
    src: ../sites-available/superlinks.conf
    dest: /etc/apache2/sites-enabled/superlinks.conf
    state: link
  become: true
  notify: apache restart

- name: Create superlinks directory
  ansible.builtin.file:
    dest: "{{ document_root }}/superlinks"
    state: directory
    owner: '{{ ansible_user }}'
    group: www-data
    mode: 0755
  become: true

- name: Install source
  ansible.builtin.git:
    repo: 'https://github.com/Keeper-of-the-Keys/superlinks.git'
    dest: "{{ document_root }}/superlinks"

- name: Install index.html
  ansible.builtin.template:
    src: index.j2
    dest: "{{ document_root }}/index.html"
  become: true

- name: Setup authenticated config.php
  ansible.builtin.template:
    src: authenticated/config.php.example
    dest: "{{ document_root }}/superlinks/authenticated/config.php"
    mode: 0640
    owner: '{{ ansible_user }}'
    group: www-data
  become: true

- name: Setup public config.php
  ansible.builtin.template:
    src: public/config.php.example
    dest: "{{ document_root }}/superlinks/public/config.php"
    mode: 0640
    owner: '{{ ansible_user }}'
    group: www-data
  become: true
